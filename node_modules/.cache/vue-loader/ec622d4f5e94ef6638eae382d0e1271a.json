{"remainingRequest":"/home/stoneage/vueJs projects/trustLineTradeVuex/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/stoneage/vueJs projects/trustLineTradeVuex/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/stoneage/vueJs projects/trustLineTradeVuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stoneage/vueJs projects/trustLineTradeVuex/src/views/apps.vue?vue&type=template&id=3b56dee8&","dependencies":[{"path":"/home/stoneage/vueJs projects/trustLineTradeVuex/src/views/apps.vue","mtime":1655307156181},{"path":"/home/stoneage/vueJs projects/trustLineTradeVuex/node_modules/cache-loader/dist/cjs.js","mtime":1655272566310},{"path":"/home/stoneage/vueJs projects/trustLineTradeVuex/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1655272561426},{"path":"/home/stoneage/vueJs projects/trustLineTradeVuex/node_modules/cache-loader/dist/cjs.js","mtime":1655272566310},{"path":"/home/stoneage/vueJs projects/trustLineTradeVuex/node_modules/vue-loader/lib/index.js","mtime":1655272561270}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}