{"remainingRequest":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/babel-loader/lib/index.js!/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/holdings.js","dependencies":[{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/holdings.js","mtime":1651728105680},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/babel.config.js","mtime":1649344700943},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/cache-loader/dist/cjs.js","mtime":1655272566310},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/babel-loader/lib/index.js","mtime":1655272566942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/holdings.js"],"names":["service","errorHandling","formula","holdings","namespaced","state","holdingList","fnoList","mcxList","currentTableData","tabList","totalInvestment","totalcurrentValue","daysPnl","daysPnlChange","totalPnl","totalPnlChange","pludgeTransId","pludgeDpId","pludgeReqId","pludgeVersion","pludgeUrl","cdslDialog","cdslLoader","mutations","setHoldingList","data","holdingsExchange","forEach","el","i","showdropdown","token","exch","push","length","dispatch","holdingsProfitLoss","setTabList","Items","item","tempData","name","setCdslLoader","payload","setCdslDialog","setPludgeDataArray","transDtls","dpId","reqId","version","url","commit","actions","setSocketValues","element","exchHold","Nsetsym","Token1","tk","LTnse","lp","Token2","LTbse","getHoldings","rootGetters","root","userorderBook","userSessionID","userId","userSettingDto","getHoldingData","then","response","status","Emsg","HoldingVal","emsg","sessionExpire","err","errLog","getPreviousDayClose","json","tokenList","stat","previousDayClose","result","previousClose","checkWebsocketStatus","where","callCdsl","rootState","d","Date","month","getMonth","dformat","getDate","getFullYear","join","tempRecordDtls","isIn","isin","quantity","SellableQty","reqType","reqIdentifier","boId","settings","userDetails","exId","numberOfDays","execDate","trim","toString","recordDtls","jsonObject","pludgeData","resp","getters","getHoldingList"],"mappings":"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","sourcesContent":["\n\n\nimport service from \"../Services/httpservice\"\nimport errorHandling from '../Services/errorHandling'\nimport formula from '../Services/formula'\nconst holdings = {\n    namespaced: true,\n\n    state: {\n        holdingList: [],\n        fnoList: [],\n        mcxList: [],\n        currentTableData: [],\n        tabList: [],\n        totalInvestment: 0,\n        totalcurrentValue: 0,\n        daysPnl: 0,\n        daysPnlChange: 0,\n        totalPnl: 0,\n        totalPnlChange: 0,\n        pludgeTransId: '' ,\n        pludgeDpId: '',\n        pludgeReqId: '',\n        pludgeVersion: '',\n        pludgeUrl: '',\n        cdslDialog: false,\n        cdslLoader: false\n    },\n\n    mutations: {\n        /****\n         * @author Senthil\n         * date 14-12-2021\n         */\n         setHoldingList (state, data) {\n           \n            state.totalInvestment = 0\n            state.totalcurrentValue = 0\n            state.totalPnl = 0\n            state.totalPnlChange = 0\n            var holdingsExchange = []\n            data.forEach((el, i) => {\n                el.showdropdown = false;\n                el.holdingList = false\n                var data = {\n                    token:\n                        el[\"ExchSeg1\"] == null ||\n                            el[\"ExchSeg1\"] == \"\"\n                            ? el[\"Token2\"]\n                            : el[\"Token1\"],\n                    exch:\n                        el[\"ExchSeg1\"] == null ||\n                            el[\"ExchSeg1\"] == \"\"\n                            ? el[\"ExchSeg2\"]\n                            : el[\"ExchSeg1\"],\n                };\n                holdingsExchange.push(data);\n               \n            })\n            if (holdingsExchange != [] && holdingsExchange.length != 0) {\n                this.dispatch('holdings/getPreviousDayClose', holdingsExchange)\n            }\n            state.currentTableData = state.holdingList  = data;\n            this.dispatch('holdings/checkWebsocketStatus')\n            formula.holdingsProfitLoss()\n        },\n\n        setTabList (state) {\n            state.tabList = []\n            var Items = [\"Stocks\"]\n            for (let item of Items) {\n                var tempData = {\n                    name: item,\n                    length: state.currentTableData.length\n                }\n                state.tabList.push(tempData)\n            }\n        },\n        setCdslLoader(state, payload){\n            state.cdslLoader = payload\n        },\n        setCdslDialog(state , payload){\n            state.cdslDialog = payload\n        },\n        setPludgeDataArray(state, payload){\n            state.pludgeTransId = payload == '' ? '' : payload.transDtls\n              state.pludgeDpId  = payload == '' ? '' : payload.dpId\n             state.pludgeReqId =  payload == '' ? '' : payload.reqId\n             state.pludgeVersion = payload == '' ? '' : payload.version\n            state.pludgeUrl = payload == '' ? '' : payload.url\n\n            this.commit('holdings/setCdslDialog', true)\n        }\n    },\n\n    actions: {\n        setSocketValues ({state}, data) {\n            state.holdingList.forEach( element => {\n                var exchHold = element['ExchSeg1'] && element.Nsetsym != \"0\" ?  element['ExchSeg1'] :  element['ExchSeg2'] \n                if (exchHold == \"NSE\" && element.Token1 == data.tk) {\n                    element.LTnse = !!data.lp ? data.lp : element.LTnse\n                } else if (exchHold == \"BSE\" && element.Token2 == data.tk) {\n                    element.LTbse = !!data.lp ? data.lp : element.LTbse\n                }\n            })\n\n            formula.holdingsProfitLoss()\n        },\n        /****\n         * @author Senthil\n         * date 3-12-2021\n         */\n        async getHoldings ({ commit, rootGetters, dispatch }) {\n            commit('setLoader', true, { root: true })\n            let userorderBook = {\n                userSessionID: rootGetters['authtication/getUserSession'],\n                userId: rootGetters['authtication/getUserId'],\n                userSettingDto: rootGetters['authtication/getUserSessionDto'],\n            };\n            await service.getHoldingData(userorderBook).then(response => {\n                if (response.status == 200 && response.data.Emsg != 'No Data' && response.data.Emsg !== \"Session Expired\") {\n                    commit('setHoldingList', response.data.HoldingVal)\n                } else if (response.data.emsg == \"Session Expired\" || response.data.Emsg == \"Session Expired\") {\n                    errorHandling.sessionExpire();\n                }else{\n                    commit('setHoldingList', [])\n                }\n                commit('setTabList')\n            }, (err) => {\n                errorHandling.errLog(err)\n            }).finally(() => { commit('setLoader', false, { root: true }) })\n        },\n\n        /****\n         * @author Senthil\n         * date 15-12-2021\n         */\n        async getPreviousDayClose ({ commit, state }, payload) {\n            let json = {\n                tokenList: payload,\n            };\n            service.getPreviousDayClose(json).then((response) => {\n                if (response.status == 200 && response.data.stat == \"Ok\") {\n                    var previousDayClose = response.data.result;\n                    state.holdingList.forEach((el, i) => {\n                        el.previousDayClose = previousDayClose[i].previousClose;\n                    })\n                    formula.holdingsProfitLoss()\n                    \n                }  else if (response.data.emsg == \"Session Expired\" || response.data.Emsg == \"Session Expired\") {\n                    errorHandling.sessionExpire();\n                }\n            }, (err) => {\n                errorHandling.errLog(err)\n            }).finally(() => { commit('setLoader', false, { root: true }) });\n        },\n        checkWebsocketStatus({state, dispatch, rootGetters} , payload){\n            if(rootGetters['wsConnection/getConnectionStatue']){\n                var tempData = {\n                    data: state.holdingList,\n                    where: 'holdings'\n                }\n\n                dispatch(\"wsConnection/websocketSubscription\", tempData, { root: true }) \n            }\n        },\n     async callCdsl({state, commit, dispatch , rootState}, payload){\n         commit('setCdslLoader', true)\n           await dispatch('settings/getCustomerDetails', '' , {root: true})  \n            \n            var d = new Date();\n            var month = d.getMonth() + 1 \n      var dformat =\n      \n        [d.getDate() < 10 ? '0' + d.getDate() : d.getDate(), month < 10 ? '0' + month : month, d.getFullYear()].join('');\n        var tempRecordDtls = []\n        for(let item of payload){\n            var tempData = {\n                isIn: item.isin,\n                quantity: item.SellableQty\n             }\n             tempRecordDtls.push(tempData)\n        }\n            var transDtls ={\n                reqType:'D',\n                reqIdentifier:'S',\n                boId: '12085300' + rootState.settings.userDetails[\"dpAccountNumber\"],\n                exId:'12',\n                numberOfDays:'1',\n                execDate: dformat.trim().toString(),\n                recordDtls: tempRecordDtls\n             }\n        let jsonObject = {\n            dpId : \"85300\",\n            transDtls: transDtls\n        }\n            service.pludgeData(jsonObject).then(resp =>{\n                if(resp.status === 200 && resp.data.result['transDtls']){\n                    commit('setPludgeDataArray' , resp.data.result)\n                }\n            }, (err) => {\n                errorHandling.errLog(err)\n            }).finally(() => { commit('setCdslLoader', false) })\n        }\n    },\n    getters: {\n        getHoldingList: state => {\n            return state.holdingList\n        },\n    }\n};\nexport default holdings;"]}]}