{"remainingRequest":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/babel-loader/lib/index.js!/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/positions.js","dependencies":[{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/positions.js","mtime":1655307156181},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/babel.config.js","mtime":1649344700943},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/cache-loader/dist/cjs.js","mtime":1655272566310},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/babel-loader/lib/index.js","mtime":1655272566942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/positions.js"],"names":["service","errorHandling","mtom","position","namespaced","state","positionList","fnoList","mcxList","currentTableData","totalPnl","nfoTotalPnl","mcxTotalPnl","currentTotalPnl","tabList","postionLoader","positionConvertData","positionExitDialog","positionConvertDialog","exitLoader","convertionLoader","infoType","mutations","setPositionList","data","forEach","el","showdropdown","ltp","LTP","Exchange","push","MtoM","realisedProfitLoss","unRealisedProfitLoss","commit","dispatch","setCurrentTableData","type","setTabList","Items","item","tempData","name","length","toolTip","setPositionConvertData","payload","setPositionExitDialog","setPositionConvertDialog","setCurrentTab","actions","getPositions","rootGetters","json","ret","userId","userSettingDto","getPositionData","then","response","status","stat","zeroQty","tempPostionsList","NetBuyavgprc","convertToNumber","NetSellavgprc","netbuyqty","netsellqty","BLQty","Netqty","concat","where","root","emsg","sessionExpire","err","errLog","positionConversion","userSessionID","branchId","branch_id","brokerName","broker_name","account_id","s_prdt_ali","pCode","productToCode","exch","qty","toString","tsym","transtype","tockenNo","convertPosition","toaster","Result","exitPosition","Array","Pcode","netQty","exchSeg","Exchangeseg","Token","symbol","Tsym","getPositionSquareOff","setSocketValues","tk","lp","checkWebsocketStatus","getters","getPositionExitDialog","getPositionConvertDialog","getPositionList","getCurrentTableData"],"mappings":"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","sourcesContent":["import service from \"../Services/httpservice\"\nimport errorHandling from \"../Services/errorHandling\";\nimport mtom from '../Services/formula'\nconst position = {\n  namespaced: true,\n\n  state: {\n    positionList: [],\n    fnoList: [],\n    mcxList: [],\n    currentTableData: [],\n    totalPnl: 0,\n    nfoTotalPnl: 0,\n    mcxTotalPnl: 0,\n    currentTotalPnl: 0,\n    tabList: [],\n    postionLoader: false,\n    positionConvertData: [],\n    positionExitDialog: false,\n    positionConvertDialog: false,\n    exitLoader: false,\n    convertionLoader: false,\n    infoType: 0,\n  },\n\n  mutations: {\n    setPositionList (state, data) {\n      state.fnoList = []\n      state.mcxList = []\n      data.forEach(el => {\n\n        el.showdropdown = false\n        el.ltp = el.LTP\n        if (el.Exchange == 'NFO') {\n          state.fnoList.push(el)\n        }\n        if (el.Exchange == 'MCX') {\n          state.mcxList.push(el)\n        }\n        el.MtoM = mtom.realisedProfitLoss(el) + mtom.unRealisedProfitLoss(el)\n      })\n\n      state.positionList = data;\n      this.commit('position/setCurrentTableData', state.infoType)\n      this.dispatch('position/checkWebsocketStatus')\n    },\n    setCurrentTableData (state, type) {\n     \n      type == 'F&O' ? state.currentTableData = state.fnoList : type == 'MCX'\n        ? state.currentTableData = state.mcxList : state.currentTableData = state.positionList\n    },\n\n    setTabList (state) {\n      state.tabList = []\n      var Items = [\"All\", \"F&O\", \"MCX\"]\n      for (let item of Items) {\n        var tempData = {\n          name: item,\n          length: item == 'All' ? state.positionList.length : item == 'F&O' ? state.fnoList.length : item == 'MCX' ? state.mcxList.length : '',\n          toolTip: item == 'All' ? 'All Positions' : item == 'F&O' ? 'Futures and Options' : item == 'MCX' ? 'Commodity' : ''\n        }\n        state.tabList.push(tempData)\n      }\n    },\n    setPositionConvertData (state, payload) {\n      state.positionConvertData = payload;\n    },\n    setPositionExitDialog (state, payload) {\n      state.positionExitDialog = payload\n    },\n    setPositionConvertDialog (state, payload) {\n      state.positionConvertDialog = payload\n    },\n    setCurrentTab (state, payload) {\n      state.infoType = payload\n    }\n  },\n\n  actions: {\n    /****\n     * @author Senthil\n     * date 3-12-2021\n     */\n    async getPositions ({ state, commit, rootGetters, dispatch }) {\n      state.postionLoader = true\n      commit(\"setPositionList\", []);\n      let json = {\n        ret: \"NET\",\n        userId: rootGetters['authtication/getUserId'],\n        userSettingDto: rootGetters['authtication/getUserSessionDto'],\n      };\n      await service.getPositionData(json).then(response => {\n\n        if (response.status == 200 && response.data.stat !== \"Not_Ok\") {\n          var zeroQty = []\n          var tempPostionsList = []\n          for (let item of response.data) {\n            item.NetBuyavgprc = mtom.convertToNumber(item.NetBuyavgprc)\n            item.NetSellavgprc = mtom.convertToNumber(item.NetSellavgprc) \n            item.LTP = mtom.convertToNumber(item.LTP) \n            item.netbuyqty = mtom.convertToNumber(item.netbuyqty) \n            item.netsellqty = mtom.convertToNumber(item.netsellqty) \n            item.BLQty =  mtom.convertToNumber(item.BLQty) \n            item.Netqty  =  mtom.convertToNumber(item.Netqty) \n            if (item.Netqty == 0) {\n              zeroQty.push(item);\n            } else {\n              tempPostionsList.push(item)\n            }\n          }\n          var tempData = {\n            data: zeroQty.length == 0 ? tempPostionsList : tempPostionsList.concat(zeroQty),\n            where: 'postion'\n          }\n          dispatch('common/formatScrip', tempData, { root: true })\n\n        } else if (response.status == 200 && response.data.stat == \"Not_Ok\" && response.data.emsg == \"Session Expired\") {\n\n          errorHandling.sessionExpire()\n        }\n        commit(\"setTabList\");\n      }, (err) => {\n        errorHandling.errLog(err)\n      }).finally(() => { state.postionLoader = false; })\n    },\n\n    /****\n     * @author Ashwin\n     * @since 06/12/21\n     * Method for convert Positions\n     *****/\n    async positionConversion ({ state, commit, rootGetters, dispatch }, payload) {\n      state.convertionLoader = true\n      let json = {\n        userId: rootGetters['authtication/getUserId'],\n        userSessionID: rootGetters['authtication/getUserSession'],\n        branchId: rootGetters['authtication/getUserSessionDto'].branch_id,\n        brokerName: rootGetters['authtication/getUserSessionDto'].broker_name,\n        account_id: rootGetters['authtication/getUserSessionDto'].account_id,\n        s_prdt_ali: rootGetters['authtication/getUserSessionDto'].s_prdt_ali,\n        pCode: payload.data[\"Pcode\"],\n        productToCode: payload.data[\"Exchange\"] == \"NSE\" ||\n          payload.data[\"Exchange\"] == \"BSE\"\n          ? payload.data[\"Pcode\"] == \"CNC\"\n            ? \"MIS\"\n            : \"CNC\"\n          : payload.data[\"Pcode\"] == \"NRML\"\n            ? \"MIS\"\n            : \"NRML\",\n        exch: payload.data[\"Exchange\"],\n        qty: payload.qty.toString(),\n        tsym: payload.data[\"Tsym\"],\n        transtype:\n          payload.data[\"Netqty\"] > 0 ? \"B\" : \"S\",\n        tockenNo: payload.data[\"Token\"],\n        type:\n          payload.data[\"Type\"] == \"NET1\"\n            ? \"C\"\n            : \"D\",\n      }\n      await service.convertPosition(json).then(response => {\n        if (response.status == 200 && response.data.stat == \"Ok\") {\n          errorHandling.toaster('', 'success', response.data.Result, 3000)\n        } else if (response.data.emsg == \"Session Expired\") {\n          errorHandling.sessionExpire()\n        }else if(response.data.stat == \"Not_Ok\"){\n          errorHandling.toaster('', 'danger', response.data.emsg, 3000)\n        }\n        commit('setPositionConvertDialog', false)\n        dispatch('getPositions')\n      },\n        (err) => {\n          errorHandling.errLog(err)\n        }).finally(() => { state.convertionLoader = false; });\n    },\n\n    /****\n   * @author Ashwin\n   * @since 10/12/21\n   * Method for getting order info\n   *****/\n    async exitPosition ({ state, commit, rootGetters }, payload) {\n      state.exitLoader = true\n      var Array = []\n      for (let item of payload) {\n        let json = {\n          userId: rootGetters['authtication/getUserId'],\n          pCode: item.Pcode,\n          netQty: item.Netqty,\n          exchSeg: item.Exchangeseg,\n          tockenNo: item.Token,\n          symbol: item.Tsym\n        }\n        Array.push(json)\n      }\n\n      await service.getPositionSquareOff(Array).then(response => {\n\n        if (response.status == 200) {\n          commit('setPositionExitDialog', false)\n          errorHandling.toaster('', 'success', Array.length == 1 ? 'Position Exited Successfully' : 'Positions Exited Successfully', 3000)\n        } else if (response.data[\"Emsg\"] == \"Session Expired\" || response.data[\"emsg\"] == \"Session Expired\") {\n          errorHandling.sessionExpire()\n        }\n      }, (err) => {\n        errorHandling.errLog(err)\n      }).finally(() => { state.exitLoader = false; })\n    },\n\n    setSocketValues ({ state }, payload) {\n\n\n      state.currentTableData.forEach(el => {\n        if (payload.tk == el.Token) {\n          el.LTP = !!payload.lp ? payload.lp : el.LTP\n          el.MtoM = mtom.realisedProfitLoss(el) + mtom.unRealisedProfitLoss(el)\n\n        }\n      })\n\n    },\n    checkWebsocketStatus ({ state, dispatch, rootGetters }, payload) {\n      if (rootGetters['wsConnection/getConnectionStatue']) {\n        var tempData = {\n          data: state.positionList,\n          where: 'postion'\n        }\n\n        dispatch(\"wsConnection/websocketSubscription\", tempData, { root: true })\n      }\n    }\n  },\n\n  getters: {\n    getPositionExitDialog: state => {\n      return state.positionExitDialog\n    },\n    getPositionConvertDialog: state => {\n      return state.positionConvertDialog\n    },\n    getPositionList: state => {\n      return state.positionList\n    },\n    getCurrentTableData: state => {\n      return state.currentTableData\n    }\n  }\n};\nexport default position;"]}]}