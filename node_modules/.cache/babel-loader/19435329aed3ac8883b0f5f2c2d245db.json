{"remainingRequest":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/babel-loader/lib/index.js!/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/positions.js","dependencies":[{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/positions.js","mtime":1651728105684},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/babel.config.js","mtime":1649344700943},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/cache-loader/dist/cjs.js","mtime":1655272566310},{"path":"/home/stoneage/vueJs projects/aliceblueTradevuex/node_modules/babel-loader/lib/index.js","mtime":1655272566942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/stoneage/vueJs projects/aliceblueTradevuex/src/store/modules/positions.js"],"names":["service","errorHandling","mtom","position","namespaced","state","positionList","fnoList","mcxList","currentTableData","totalPnl","nfoTotalPnl","mcxTotalPnl","currentTotalPnl","tabList","postionLoader","positionConvertData","positionExitDialog","positionConvertDialog","exitLoader","convertionLoader","infoType","mutations","setPositionList","data","forEach","el","showdropdown","Exchange","push","MtoM","realisedProfitLoss","unRealisedProfitLoss","commit","dispatch","setCurrentTableData","type","setTabList","Items","item","tempData","name","length","toolTip","setPositionConvertData","payload","setPositionExitDialog","setPositionConvertDialog","setCurrentTab","actions","getPositions","rootGetters","json","ret","userId","userSettingDto","getPositionData","then","response","status","stat","zeroQty","tempPostionsList","NetBuyavgprc","convertToNumber","NetSellavgprc","LTP","netbuyqty","netsellqty","BLQty","Netqty","concat","where","root","emsg","sessionExpire","err","errLog","positionConversion","userSessionID","branchId","branch_id","brokerName","broker_name","account_id","s_prdt_ali","pCode","productToCode","exch","qty","toString","tsym","transtype","tockenNo","convertPosition","toaster","Result","exitPosition","Array","Pcode","netQty","exchSeg","Exchangeseg","Token","symbol","Tsym","getPositionSquareOff","setSocketValues","tk","lp","checkWebsocketStatus","getters","getPositionExitDialog","getPositionConvertDialog","getPositionList","getCurrentTableData"],"mappings":"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","sourcesContent":["import service from \"../Services/httpservice\"\nimport errorHandling from \"../Services/errorHandling\";\nimport mtom from '../Services/formula'\nconst position = {\n  namespaced: true,\n\n  state: {\n    positionList: [],\n    fnoList: [],\n    mcxList: [],\n    currentTableData: [],\n    totalPnl: 0,\n    nfoTotalPnl: 0,\n    mcxTotalPnl: 0,\n    currentTotalPnl: 0,\n    tabList: [],\n    postionLoader: false,\n    positionConvertData: [],\n    positionExitDialog: false,\n    positionConvertDialog: false,\n    exitLoader: false,\n    convertionLoader: false,\n    infoType: 0,\n  },\n\n  mutations: {\n    setPositionList (state, data) {\n      state.fnoList = []\n      state.mcxList = []\n      data.forEach(el => {\n\n        el.showdropdown = false\n\n        if (el.Exchange == 'NFO') {\n          state.fnoList.push(el)\n        }\n        if (el.Exchange == 'MCX') {\n          state.mcxList.push(el)\n        }\n        el.MtoM = mtom.realisedProfitLoss(el) + mtom.unRealisedProfitLoss(el)\n      })\n\n      state.positionList = data;\n      this.commit('position/setCurrentTableData', state.infoType)\n      this.dispatch('position/checkWebsocketStatus')\n    },\n    setCurrentTableData (state, type) {\n     \n      type == 'F&O' ? state.currentTableData = state.fnoList : type == 'MCX'\n        ? state.currentTableData = state.mcxList : state.currentTableData = state.positionList\n    },\n\n    setTabList (state) {\n      state.tabList = []\n      var Items = [\"All\", \"F&O\", \"MCX\"]\n      for (let item of Items) {\n        var tempData = {\n          name: item,\n          length: item == 'All' ? state.positionList.length : item == 'F&O' ? state.fnoList.length : item == 'MCX' ? state.mcxList.length : '',\n          toolTip: item == 'All' ? 'All Positions' : item == 'F&O' ? 'Futures and Options' : item == 'MCX' ? 'Commodity' : ''\n        }\n        state.tabList.push(tempData)\n      }\n    },\n    setPositionConvertData (state, payload) {\n      state.positionConvertData = payload;\n    },\n    setPositionExitDialog (state, payload) {\n      state.positionExitDialog = payload\n    },\n    setPositionConvertDialog (state, payload) {\n      state.positionConvertDialog = payload\n    },\n    setCurrentTab (state, payload) {\n      state.infoType = payload\n    }\n  },\n\n  actions: {\n    /****\n     * @author Senthil\n     * date 3-12-2021\n     */\n    async getPositions ({ state, commit, rootGetters, dispatch }) {\n      state.postionLoader = true\n      commit(\"setPositionList\", []);\n      let json = {\n        ret: \"NET\",\n        userId: rootGetters['authtication/getUserId'],\n        userSettingDto: rootGetters['authtication/getUserSessionDto'],\n      };\n      await service.getPositionData(json).then(response => {\n\n        if (response.status == 200 && response.data.stat !== \"Not_Ok\") {\n          var zeroQty = []\n          var tempPostionsList = []\n          for (let item of response.data) {\n            item.NetBuyavgprc = mtom.convertToNumber(item.NetBuyavgprc)\n            item.NetSellavgprc = mtom.convertToNumber(item.NetSellavgprc) \n            item.LTP = mtom.convertToNumber(item.LTP) \n            item.netbuyqty = mtom.convertToNumber(item.netbuyqty) \n            item.netsellqty = mtom.convertToNumber(item.netsellqty) \n            item.BLQty =  mtom.convertToNumber(item.BLQty) \n            item.Netqty  =  mtom.convertToNumber(item.Netqty) \n            if (item.Netqty == 0) {\n              zeroQty.push(item);\n            } else {\n              tempPostionsList.push(item)\n            }\n          }\n          var tempData = {\n            data: zeroQty.length == 0 ? tempPostionsList : tempPostionsList.concat(zeroQty),\n            where: 'postion'\n          }\n          dispatch('common/formatScrip', tempData, { root: true })\n\n        } else if (response.status == 200 && response.data.stat == \"Not_Ok\" && response.data.emsg == \"Session Expired\") {\n\n          errorHandling.sessionExpire()\n        }\n        commit(\"setTabList\");\n      }, (err) => {\n        errorHandling.errLog(err)\n      }).finally(() => { state.postionLoader = false; })\n    },\n\n    /****\n     * @author Ashwin\n     * @since 06/12/21\n     * Method for convert Positions\n     *****/\n    async positionConversion ({ state, commit, rootGetters, dispatch }, payload) {\n      state.convertionLoader = true\n      let json = {\n        userId: rootGetters['authtication/getUserId'],\n        userSessionID: rootGetters['authtication/getUserSession'],\n        branchId: rootGetters['authtication/getUserSessionDto'].branch_id,\n        brokerName: rootGetters['authtication/getUserSessionDto'].broker_name,\n        account_id: rootGetters['authtication/getUserSessionDto'].account_id,\n        s_prdt_ali: rootGetters['authtication/getUserSessionDto'].s_prdt_ali,\n        pCode: payload.data[\"Pcode\"],\n        productToCode: payload.data[\"Exchange\"] == \"NSE\" ||\n          payload.data[\"Exchange\"] == \"BSE\"\n          ? payload.data[\"Pcode\"] == \"CNC\"\n            ? \"MIS\"\n            : \"CNC\"\n          : payload.data[\"Pcode\"] == \"NRML\"\n            ? \"MIS\"\n            : \"NRML\",\n        exch: payload.data[\"Exchange\"],\n        qty: payload.qty.toString(),\n        tsym: payload.data[\"Tsym\"],\n        transtype:\n          payload.data[\"Netqty\"] > 0 ? \"B\" : \"S\",\n        tockenNo: payload.data[\"Token\"],\n        type:\n          payload.data[\"Type\"] == \"NET1\"\n            ? \"C\"\n            : \"D\",\n      }\n      await service.convertPosition(json).then(response => {\n        if (response.status == 200 && response.data.stat == \"Ok\") {\n          errorHandling.toaster('', 'success', response.data.Result, 3000)\n        } else if (response.data.emsg == \"Session Expired\") {\n          errorHandling.sessionExpire()\n        }else if(response.data.stat == \"Not_Ok\"){\n          errorHandling.toaster('', 'danger', response.data.emsg, 3000)\n        }\n        commit('setPositionConvertDialog', false)\n        dispatch('getPositions')\n      },\n        (err) => {\n          errorHandling.errLog(err)\n        }).finally(() => { state.convertionLoader = false; });\n    },\n\n    /****\n   * @author Ashwin\n   * @since 10/12/21\n   * Method for getting order info\n   *****/\n    async exitPosition ({ state, commit, rootGetters }, payload) {\n      state.exitLoader = true\n      var Array = []\n      for (let item of payload) {\n        let json = {\n          userId: rootGetters['authtication/getUserId'],\n          pCode: item.Pcode,\n          netQty: item.Netqty,\n          exchSeg: item.Exchangeseg,\n          tockenNo: item.Token,\n          symbol: item.Tsym\n        }\n        Array.push(json)\n      }\n\n      await service.getPositionSquareOff(Array).then(response => {\n\n        if (response.status == 200) {\n          commit('setPositionExitDialog', false)\n          errorHandling.toaster('', 'success', Array.length == 1 ? 'Position Exited Successfully' : 'Positions Exited Successfully', 3000)\n        } else if (response.data[\"Emsg\"] == \"Session Expired\" || response.data[\"emsg\"] == \"Session Expired\") {\n          errorHandling.sessionExpire()\n        }\n      }, (err) => {\n        errorHandling.errLog(err)\n      }).finally(() => { state.exitLoader = false; })\n    },\n\n    setSocketValues ({ state }, payload) {\n\n\n      state.currentTableData.forEach(el => {\n        if (payload.tk == el.Token) {\n          el.LTP = !!payload.lp ? payload.lp : el.LTP\n          el.MtoM = mtom.realisedProfitLoss(el) + mtom.unRealisedProfitLoss(el)\n\n        }\n      })\n\n    },\n    checkWebsocketStatus ({ state, dispatch, rootGetters }, payload) {\n      if (rootGetters['wsConnection/getConnectionStatue']) {\n        var tempData = {\n          data: state.positionList,\n          where: 'postion'\n        }\n\n        dispatch(\"wsConnection/websocketSubscription\", tempData, { root: true })\n      }\n    }\n  },\n\n  getters: {\n    getPositionExitDialog: state => {\n      return state.positionExitDialog\n    },\n    getPositionConvertDialog: state => {\n      return state.positionConvertDialog\n    },\n    getPositionList: state => {\n      return state.positionList\n    },\n    getCurrentTableData: state => {\n      return state.currentTableData\n    }\n  }\n};\nexport default position;"]}]}